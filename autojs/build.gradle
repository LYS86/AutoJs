apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion versions.compile
    buildToolsVersion versions.buildTool

    defaultConfig {
        minSdkVersion versions.mini
        targetSdkVersion versions.target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.stardust.autojs'
    lint {
        abortOnError false
    }
}

repositories {
    google()
}

dependencies {
    androidTestImplementation(libs.espresso.core) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation libs.junit
    api fileTree(dir: 'libs', include: ['*.jar'])
    api libs.eventbus
    api libs.zip4j
    api(libs.material.dialogs.core) {
        exclude group: 'com.android.support'
    }
    api libs.material
    api libs.enhancedfloaty
    api libs.roundedimageview
    // OkHttp
    api libs.okhttp
    // JDeferred
    api libs.jdeferred.android
    //RootShell
    api libs.rootshell
    // Gson
    api libs.gson
    // log4j
    api libs.android.logging.log4j
    api libs.log4j
    // Rhino JavaScript Engine
    api files('libs/rhino-1.7.15.jar')
    api project(path: ':common')
    api project(path: ':automator')
}

dependencies /* LiteRT */ {
    implementation(libs.litert)
    implementation(libs.litert.gpu)
    implementation(libs.litert.metadata)
    implementation(libs.litert.support)
}

dependencies/** ML Kit **/ {
    implementation(libs.text.recognition)
    implementation(libs.text.recognition.chinese)
}